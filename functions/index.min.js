const functions=require("firebase-functions");let admin=require("firebase-admin");admin.initializeApp(functions.config().firebase),exports.sendTeacherNotification=functions.database.ref("/NotificationTeacher/{userId}/{notificationId}").onWrite(event=>{console.log("--- Getting Started ---");const valueObject=event.after.val(),fromID=valueObject.fromID;console.log("fromId: ",fromID);const fromAccountType=valueObject.fromAccountType;console.log("fromAccountType: ",fromAccountType);const toId=valueObject.toID;console.log("toId: ",toId);const toAccountType=valueObject.toAccountType;console.log("toAccountType: ",toAccountType);const notificationType=valueObject.notificationType;console.log("notificationType: ",notificationType);var objectName=valueObject.objectName;null===objectName&&(objectName=""),console.log("objectName: ",objectName);var object=valueObject.object;null===object&&(object=""),console.log("object: ",object);var activityID=valueObject.activityID;null===activityID&&(activityID=""),console.log("activityID: ",activityID);var notificationImageURL=valueObject.notificationImageURL;return null===notificationImageURL&&(notificationImageURL=""),console.log("notificationImageURL: ",notificationImageURL),"School"===fromAccountType?admin.database().ref("/School/"+fromID).once("value").then(snap=>{const fromName=snap.child("schoolName").val();console.log("fromName: ",fromName);const fromProfilePhoto=snap.child("profilePhotoUrl").val();var payload;return console.log("fromProfilePhoto: ",fromProfilePhoto),admin.database().ref("/UserRoles/"+toId).once("value").then(snap=>{const token=snap.child("token").val();return console.log("toID: ",toId),console.log("token: ",token),console.log("Construct the notification message"),"ClassPost"===notificationType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" created a new class post for "+objectName,activityID:activityID}},console.log("payload: ",payload)):"Like"===notificationType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" liked your class post for "+objectName,activityID:activityID}},console.log("payload: ",payload)):"Comment"===notificationType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" commented on your class post for "+objectName,activityID:activityID}},console.log("payload: ",payload)):"Event"===notificationType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" created a new school event for you",activityID:activityID}},console.log("payload: ",payload)):"Newsletter"===notificationType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" published a new school newsletter for you",activityID:activityID}},console.log("payload: ",payload)):"ConnectionRequest"===notificationType?"Parent"===toAccountType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has requested to connect to "+objectName+"'s account",activityID:activityID}},console.log("payload: ",payload)):"Teacher"===toAccountType&&(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has requested to connect to your account",activityID:activityID}},console.log("payload: ",payload)):"ConnectionRequestDeclined"===notificationType?"Parent"===toAccountType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:"Your request to connect to "+objectName+"'s account has been declined by "+fromName,activityID:activityID}},console.log("payload: ",payload)):"Teacher"===toAccountType&&(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:"Your request to connect to "+fromName+" has been declined by them",activityID:activityID}},console.log("payload: ",payload)):"Disconnection"===notificationType?"Parent"===toAccountType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has disconnected from "+objectName+"'s account",activityID:activityID}},console.log("payload: ",payload)):"Teacher"===toAccountType&&(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has disconnected from your account",activityID:activityID}},console.log("payload: ",payload)):"Connection"===notificationType?"Parent"===toAccountType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has connected to "+objectName+"'s account",activityID:activityID}},console.log("payload: ",payload)):"Teacher"===toAccountType&&(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has connected to your account",activityID:activityID}},console.log("payload: ",payload)):"NewResultPost"===notificationType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has posted new academic results for "+objectName,activityID:activityID}},console.log("payload: ",payload)):"NewBehaviouralPost"===notificationType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has posted new behavioural results for "+objectName,activityID:activityID}},console.log("payload: ",payload)):"NewAttendancePost"===notificationType&&(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has posted a new attendance record for "+objectName,activityID:activityID}},console.log("payload: ",payload)),console.log("Send message to device"),admin.messaging().sendToDevice(token,payload).then((function(response){return console.log("token__ : ",token),console.log("Successfully sent message:",JSON.stringify(response)),console.log(response.result[0].error),response.successCount})).catch((function(error){console.log("Error sending message:",error)}))})}):admin.database().ref("/Teacher/"+fromID).once("value").then(snap=>{const fromName=snap.child("firstName").val()+" "+snap.child("lastName").val();console.log("fromName: ",fromName);const fromProfilePhoto=snap.child("profilePicURL").val();var payload;return console.log("fromProfilePhoto: ",fromProfilePhoto),admin.database().ref("/UserRoles/"+toId).once("value").then(snap=>{const token=snap.child("token").val();return console.log("token: ",token),console.log("Construct the notification message"),"ClassPost"===notificationType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" created a new class post for "+objectName,activityID:activityID}},console.log("payload: ",payload)):"Like"===notificationType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" liked your class post for "+objectName,activityID:activityID}},console.log("payload: ",payload)):"Comment"===notificationType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" commented on your class post for "+objectName,activityID:activityID}},console.log("payload: ",payload)):"Event"===notificationType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" created a new school event for you",activityID:activityID}},console.log("payload: ",payload)):"Newsletter"===notificationType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" published a new school newsletter for you",activityID:activityID}},console.log("payload: ",payload)):"ConnectionRequest"===notificationType?"Parent"===toAccountType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has requested to connect to "+objectName+"'s account",activityID:activityID}},console.log("payload: ",payload)):"Teacher"===toAccountType&&(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has requested to connect to your account",activityID:activityID}},console.log("payload: ",payload)):"ConnectionRequestDeclined"===notificationType?"Parent"===toAccountType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:"Your request to connect to "+objectName+"'s account has been declined by "+fromName,activityID:activityID}},console.log("payload: ",payload)):"Teacher"===toAccountType&&(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:"Your request to connect to "+fromName+" has been declined by them",activityID:activityID}},console.log("payload: ",payload)):"Disconnection"===notificationType?"Parent"===toAccountType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has disconnected from "+objectName+"'s account",activityID:activityID}},console.log("payload: ",payload)):"Teacher"===toAccountType&&(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has disconnected from your account",activityID:activityID}},console.log("payload: ",payload)):"Connection"===notificationType?"Parent"===toAccountType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has connected to "+objectName+"'s account",activityID:activityID}},console.log("payload: ",payload)):"Teacher"===toAccountType&&(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has connected to your account",activityID:activityID}},console.log("payload: ",payload)):"NewResultPost"===notificationType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has posted new academic results for "+objectName,activityID:activityID}},console.log("payload: ",payload)):"NewBehaviouralPost"===notificationType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has posted new behavioural results for "+objectName,activityID:activityID}},console.log("payload: ",payload)):"NewAttendancePost"===notificationType&&(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has posted a new attendance record for "+objectName,activityID:activityID}},console.log("payload: ",payload)),console.log("Send message to device"),admin.messaging().sendToDevice(token,payload).then((function(response){return console.log("token__ : ",token),console.log("Successfully sent message:",JSON.stringify(response)),console.log(response.result[0].error),response.successCount})).catch((function(error){console.log("Error sending message:",error)}))})})}),exports.sendParentNotification=functions.database.ref("/NotificationParent/{userId}/{notificationId}").onWrite(event=>{console.log("--- Getting Started ---");const valueObject=event.after.val(),fromID=valueObject.fromID;console.log("fromId: ",fromID);const fromAccountType=valueObject.fromAccountType;console.log("fromAccountType: ",fromAccountType);const toId=valueObject.toID;console.log("toId: ",toId);const toAccountType=valueObject.toAccountType;console.log("toAccountType: ",toAccountType);const notificationType=valueObject.notificationType;console.log("notificationType: ",notificationType);var objectName=valueObject.object;null===objectName&&(objectName=""),console.log("objectName: ",objectName);var object=valueObject.object;null===object&&(object=""),console.log("object: ",object);var activityID=valueObject.activityID;null===activityID&&(activityID=""),console.log("activityID: ",activityID);var notificationImageURL=valueObject.notificationImageURL;return null===notificationImageURL&&(notificationImageURL=""),console.log("notificationImageURL: ",notificationImageURL),"School"===fromAccountType?admin.database().ref("/School/"+fromID).once("value").then(snap=>{const fromName=snap.child("schoolName").val();console.log("fromName: ",fromName);const fromProfilePhoto=snap.child("profilePhotoUrl").val();var payload;return console.log("fromProfilePhoto: ",fromProfilePhoto),admin.database().ref("/UserRoles/"+toId).once("value").then(snap=>{const token=snap.child("token").val();return console.log("toID: ",toId),console.log("token: ",token),console.log("Construct the notification message"),"ClassPost"===notificationType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" created a new class post for "+objectName,activityID:activityID}},console.log("payload: ",payload)):"Like"===notificationType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" liked your class post for "+objectName,activityID:activityID}},console.log("payload: ",payload)):"Comment"===notificationType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" commented on your class post for "+objectName,activityID:activityID}},console.log("payload: ",payload)):"Event"===notificationType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" created a new school event for you",activityID:activityID}},console.log("payload: ",payload)):"Newsletter"===notificationType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" published a new school newsletter for you",activityID:activityID}},console.log("payload: ",payload)):"ConnectionRequest"===notificationType?"Parent"===toAccountType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has requested to connect to "+objectName+"'s account",activityID:activityID}},console.log("payload: ",payload)):"Teacher"===toAccountType&&(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has requested to connect to your account",activityID:activityID}},console.log("payload: ",payload)):"ConnectionRequestDeclined"===notificationType?"Parent"===toAccountType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:"Your request to connect to "+objectName+"'s account has been declined by "+fromName,activityID:activityID}},console.log("payload: ",payload)):"Teacher"===toAccountType&&(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:"Your request to connect to "+fromName+" has been declined by them",activityID:activityID}},console.log("payload: ",payload)):"Disconnection"===notificationType?"Parent"===toAccountType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has disconnected from "+objectName+"'s account",activityID:activityID}},console.log("payload: ",payload)):"Teacher"===toAccountType&&(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has disconnected from your account",activityID:activityID}},console.log("payload: ",payload)):"Connection"===notificationType?"Parent"===toAccountType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has connected to "+objectName+"'s account",activityID:activityID}},console.log("payload: ",payload)):"Teacher"===toAccountType&&(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has connected to your account",activityID:activityID}},console.log("payload: ",payload)):"NewResultPost"===notificationType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has posted new academic results for "+objectName,activityID:activityID}},console.log("payload: ",payload)):"NewBehaviouralPost"===notificationType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has posted new behavioural results for "+objectName,activityID:activityID}},console.log("payload: ",payload)):"NewAttendancePost"===notificationType&&(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has posted a new attendance record for "+objectName,activityID:activityID}},console.log("payload: ",payload)),console.log("Send message to device"),admin.messaging().sendToDevice(token,payload).then((function(response){return console.log("token__ : ",token),console.log("Successfully sent message:",JSON.stringify(response)),console.log(response.result[0].error),response.successCount})).catch((function(error){console.log("Error sending message:",error)}))})}):admin.database().ref("/Teacher/"+fromID).once("value").then(snap=>{const fromName=snap.child("firstName").val()+" "+snap.child("lastName").val();console.log("fromName: ",fromName);const fromProfilePhoto=snap.child("profilePicURL").val();var payload;return console.log("fromProfilePhoto: ",fromProfilePhoto),admin.database().ref("/UserRoles/"+toId).once("value").then(snap=>{const token=snap.child("token").val();return console.log("token: ",token),console.log("Construct the notification message"),"ClassPost"===notificationType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" created a new class post for "+objectName,activityID:activityID}},console.log("payload: ",payload)):"Like"===notificationType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" liked your class post for "+objectName,activityID:activityID}},console.log("payload: ",payload)):"Comment"===notificationType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" commented on your class post for "+objectName,activityID:activityID}},console.log("payload: ",payload)):"Event"===notificationType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" created a new school event for you",activityID:activityID}},console.log("payload: ",payload)):"Newsletter"===notificationType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" published a new school newsletter for you",activityID:activityID}},console.log("payload: ",payload)):"ConnectionRequest"===notificationType?"Parent"===toAccountType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has requested to connect to "+objectName+"'s account",activityID:activityID}},console.log("payload: ",payload)):"Teacher"===toAccountType&&(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has requested to connect to your account",activityID:activityID}},console.log("payload: ",payload)):"ConnectionRequestDeclined"===notificationType?"Parent"===toAccountType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:"Your request to connect to "+objectName+"'s account has been declined by "+fromName,activityID:activityID}},console.log("payload: ",payload)):"Teacher"===toAccountType&&(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:"Your request to connect to "+fromName+" has been declined by them",activityID:activityID}},console.log("payload: ",payload)):"Disconnection"===notificationType?"Parent"===toAccountType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has disconnected from "+objectName+"'s account",activityID:activityID}},console.log("payload: ",payload)):"Teacher"===toAccountType&&(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has disconnected from your account",activityID:activityID}},console.log("payload: ",payload)):"Connection"===notificationType?"Parent"===toAccountType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has connected to "+objectName+"'s account",activityID:activityID}},console.log("payload: ",payload)):"Teacher"===toAccountType&&(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has connected to your account",activityID:activityID}},console.log("payload: ",payload)):"NewResultPost"===notificationType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has posted new academic results for "+objectName,activityID:activityID}},console.log("payload: ",payload)):"NewBehaviouralPost"===notificationType?(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has posted new behavioural results for "+objectName,activityID:activityID}},console.log("payload: ",payload)):"NewAttendancePost"===notificationType&&(payload={data:{data_type:notificationType,account_type:toAccountType,fromAccountType:fromAccountType,fromID:fromID,fromName:fromName,object:object,objectName:objectName,notificationImageURL:notificationImageURL,message:fromName+" has posted a new attendance record for "+objectName,activityID:activityID}},console.log("payload: ",payload)),console.log("Send message to device"),admin.messaging().sendToDevice(token,payload).then((function(response){return console.log("token__ : ",token),console.log("Successfully sent message:",JSON.stringify(response)),console.log(response.result[0].error),response.successCount})).catch((function(error){console.log("Error sending message:",error)}))})})}),exports.sendMessageNotification=functions.database.ref("/Messages Recent/{userId}/{otherPartyId}").onWrite(event=>{console.log("--- Getting Started ---");const valueObject=event.after.val(),isMine=valueObject.mine;if(console.log("mine: ",isMine),!1===isMine){const fromID=valueObject.senderID;console.log("fromId: ",fromID);const toId=valueObject.receiverID;console.log("toId: ",toId);const message=valueObject.message;console.log("message: ",message);const notificationType="Message";console.log("notificationType: ",notificationType);const notificationImageURL=valueObject.fileURL;return null===activityID&&(activityID=""),console.log("notificationImageURL: ",notificationImageURL),admin.database().ref("/School/"+fromID).once("value").then(snap=>{if(snap.exists()){const fromName=snap.child("schoolName").val();console.log("fromName: ",fromName);var fromProfilePhoto=snap.child("profilePhotoUrl").val(),payload;return null===fromProfilePhoto&&(fromProfilePhoto=""),console.log("fromProfilePhoto: ",fromProfilePhoto),admin.database().ref("/UserRoles/"+toId).once("value").then(snap=>{const token=snap.child("token").val();return console.log("toID: ",toId),console.log("token: ",token),console.log("Construct the notification message"),payload={data:{data_type:notificationType,fromID:fromID,fromName:fromName,notificationImageURL:fromProfilePhoto,message:fromName+": "+message}},console.log("payload: ",payload),console.log("Send message to device"),admin.messaging().sendToDevice(token,payload).then((function(response){return console.log("token__ : ",token),console.log("Successfully sent message:",JSON.stringify(response)),console.log(response.result[0].error),response.successCount})).catch((function(error){console.log("Error sending message:",error)}))})}return admin.database().ref("/Teacher/"+fromID).once("value").then(snap=>{if(snap.exists()){const fromName=snap.child("firstName").val()+" "+snap.child("lastName").val();console.log("fromName: ",fromName);var fromProfilePhoto=snap.child("profilePicURL").val(),payload;return null===fromProfilePhoto&&(fromProfilePhoto=""),console.log("fromProfilePhoto: ",fromProfilePhoto),admin.database().ref("/UserRoles/"+toId).once("value").then(snap=>{const token=snap.child("token").val();return console.log("token: ",token),console.log("Construct the notification message"),payload={data:{data_type:notificationType,fromID:fromID,fromName:fromName,notificationImageURL:fromProfilePhoto,message:fromName+": "+message}},console.log("payload: ",payload),console.log("Send message to device"),admin.messaging().sendToDevice(token,payload).then((function(response){return console.log("token__ : ",token),console.log("Successfully sent message:",JSON.stringify(response)),console.log(response.result[0].error),response.successCount})).catch((function(error){console.log("Error sending message:",error)}))})}})})}});